apiVersion: v1
kind: Service
metadata:
 name: health-api
 namespace: local
 labels:
  app: health-api
  environment: local
spec:
 # This defines which pods are going to be represented by this Service
 # The service becomes a network endpoint for either other services or 
 # maybe external users to connect to (eg browser)
 selector:
  app: health-api
  environment: local
 ports:
 - name: http
   port: 80
   # K8s by default only enable port greater than 30000
   nodePort: 30080
 # ClusterIP makes service only accessble inside k8s cluster
 # NodePort expose you service outside the k8s cluster
 type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-api
  namespace: local
  labels:
    app: health-api
    environment: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: health-api
      environment: local
  template: # template for the pods
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus/
        prometheus.io/scrap: "true"
        prometheus.io/port: "80"
      labels:
        app: health-api
        environment: local
    spec:
      containers:
      - name: health-api
        image: fapinheiro/healthapi:1.0.4
        livenessProbe:
          httpGet:
            path: /actuator/info
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 2
          successThreshold: 2
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 256Mi

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
 name: health-api
 namespace: local
spec:
 scaleTargetRef:
  apiVersion: apps/v1
  kind: Deployment
  name: health-api
 minReplicas: 1
 maxReplicas: 3
 metrics:
 - type: Pods
   pods:
    metric:
     name: http_server_requests_per_second
    target:
     type: AverageValue 
     averageValue: 5
 - type: Pods
   pods:
    metric:
     name: jdbc_connections_per_second
    target:
     type: AverageValue 
     averageValue: 3
 